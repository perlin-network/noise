// Code generated by protoc-gen-go. DO NOT EDIT.
// source: protobuf/stream.proto

package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import any "github.com/golang/protobuf/ptypes/any"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ID struct {
	PublicKey            []byte   `protobuf:"bytes,1,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Address              string   `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ID) Reset()         { *m = ID{} }
func (m *ID) String() string { return proto.CompactTextString(m) }
func (*ID) ProtoMessage()    {}
func (*ID) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_e71c00ac036a5599, []int{0}
}
func (m *ID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ID.Unmarshal(m, b)
}
func (m *ID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ID.Marshal(b, m, deterministic)
}
func (dst *ID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ID.Merge(dst, src)
}
func (m *ID) XXX_Size() int {
	return xxx_messageInfo_ID.Size(m)
}
func (m *ID) XXX_DiscardUnknown() {
	xxx_messageInfo_ID.DiscardUnknown(m)
}

var xxx_messageInfo_ID proto.InternalMessageInfo

func (m *ID) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *ID) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

type Message struct {
	Message *any.Any `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// Sender's address and public key.
	Sender *ID `protobuf:"bytes,2,opt,name=sender,proto3" json:"sender,omitempty"`
	// Sender's signature of message.
	Signature []byte `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	// Nonce is the request/response ID. Null if ID associated to a message is not a request/response.
	Nonce uint64 `protobuf:"varint,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
	// Is this message a response?
	IsResponse           bool     `protobuf:"varint,5,opt,name=is_response,json=isResponse,proto3" json:"is_response,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Message) Reset()         { *m = Message{} }
func (m *Message) String() string { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()    {}
func (*Message) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_e71c00ac036a5599, []int{1}
}
func (m *Message) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Message.Unmarshal(m, b)
}
func (m *Message) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Message.Marshal(b, m, deterministic)
}
func (dst *Message) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Message.Merge(dst, src)
}
func (m *Message) XXX_Size() int {
	return xxx_messageInfo_Message.Size(m)
}
func (m *Message) XXX_DiscardUnknown() {
	xxx_messageInfo_Message.DiscardUnknown(m)
}

var xxx_messageInfo_Message proto.InternalMessageInfo

func (m *Message) GetMessage() *any.Any {
	if m != nil {
		return m.Message
	}
	return nil
}

func (m *Message) GetSender() *ID {
	if m != nil {
		return m.Sender
	}
	return nil
}

func (m *Message) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *Message) GetNonce() uint64 {
	if m != nil {
		return m.Nonce
	}
	return 0
}

func (m *Message) GetIsResponse() bool {
	if m != nil {
		return m.IsResponse
	}
	return false
}

type HandshakeRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeRequest) Reset()         { *m = HandshakeRequest{} }
func (m *HandshakeRequest) String() string { return proto.CompactTextString(m) }
func (*HandshakeRequest) ProtoMessage()    {}
func (*HandshakeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_e71c00ac036a5599, []int{2}
}
func (m *HandshakeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeRequest.Unmarshal(m, b)
}
func (m *HandshakeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeRequest.Marshal(b, m, deterministic)
}
func (dst *HandshakeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeRequest.Merge(dst, src)
}
func (m *HandshakeRequest) XXX_Size() int {
	return xxx_messageInfo_HandshakeRequest.Size(m)
}
func (m *HandshakeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeRequest proto.InternalMessageInfo

type HandshakeResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HandshakeResponse) Reset()         { *m = HandshakeResponse{} }
func (m *HandshakeResponse) String() string { return proto.CompactTextString(m) }
func (*HandshakeResponse) ProtoMessage()    {}
func (*HandshakeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_e71c00ac036a5599, []int{3}
}
func (m *HandshakeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HandshakeResponse.Unmarshal(m, b)
}
func (m *HandshakeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HandshakeResponse.Marshal(b, m, deterministic)
}
func (dst *HandshakeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HandshakeResponse.Merge(dst, src)
}
func (m *HandshakeResponse) XXX_Size() int {
	return xxx_messageInfo_HandshakeResponse.Size(m)
}
func (m *HandshakeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HandshakeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HandshakeResponse proto.InternalMessageInfo

type LookupNodeRequest struct {
	Target               *ID      `protobuf:"bytes,1,opt,name=target,proto3" json:"target,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupNodeRequest) Reset()         { *m = LookupNodeRequest{} }
func (m *LookupNodeRequest) String() string { return proto.CompactTextString(m) }
func (*LookupNodeRequest) ProtoMessage()    {}
func (*LookupNodeRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_e71c00ac036a5599, []int{4}
}
func (m *LookupNodeRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupNodeRequest.Unmarshal(m, b)
}
func (m *LookupNodeRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupNodeRequest.Marshal(b, m, deterministic)
}
func (dst *LookupNodeRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupNodeRequest.Merge(dst, src)
}
func (m *LookupNodeRequest) XXX_Size() int {
	return xxx_messageInfo_LookupNodeRequest.Size(m)
}
func (m *LookupNodeRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupNodeRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LookupNodeRequest proto.InternalMessageInfo

func (m *LookupNodeRequest) GetTarget() *ID {
	if m != nil {
		return m.Target
	}
	return nil
}

type LookupNodeResponse struct {
	Peers                []*ID    `protobuf:"bytes,1,rep,name=peers,proto3" json:"peers,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LookupNodeResponse) Reset()         { *m = LookupNodeResponse{} }
func (m *LookupNodeResponse) String() string { return proto.CompactTextString(m) }
func (*LookupNodeResponse) ProtoMessage()    {}
func (*LookupNodeResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_e71c00ac036a5599, []int{5}
}
func (m *LookupNodeResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LookupNodeResponse.Unmarshal(m, b)
}
func (m *LookupNodeResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LookupNodeResponse.Marshal(b, m, deterministic)
}
func (dst *LookupNodeResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LookupNodeResponse.Merge(dst, src)
}
func (m *LookupNodeResponse) XXX_Size() int {
	return xxx_messageInfo_LookupNodeResponse.Size(m)
}
func (m *LookupNodeResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LookupNodeResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LookupNodeResponse proto.InternalMessageInfo

func (m *LookupNodeResponse) GetPeers() []*ID {
	if m != nil {
		return m.Peers
	}
	return nil
}

type HealthRequest struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthRequest) Reset()         { *m = HealthRequest{} }
func (m *HealthRequest) String() string { return proto.CompactTextString(m) }
func (*HealthRequest) ProtoMessage()    {}
func (*HealthRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_e71c00ac036a5599, []int{6}
}
func (m *HealthRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthRequest.Unmarshal(m, b)
}
func (m *HealthRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthRequest.Marshal(b, m, deterministic)
}
func (dst *HealthRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthRequest.Merge(dst, src)
}
func (m *HealthRequest) XXX_Size() int {
	return xxx_messageInfo_HealthRequest.Size(m)
}
func (m *HealthRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthRequest.DiscardUnknown(m)
}

var xxx_messageInfo_HealthRequest proto.InternalMessageInfo

type HealthResponse struct {
	Status               string   `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthResponse) Reset()         { *m = HealthResponse{} }
func (m *HealthResponse) String() string { return proto.CompactTextString(m) }
func (*HealthResponse) ProtoMessage()    {}
func (*HealthResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_stream_e71c00ac036a5599, []int{7}
}
func (m *HealthResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthResponse.Unmarshal(m, b)
}
func (m *HealthResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthResponse.Marshal(b, m, deterministic)
}
func (dst *HealthResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthResponse.Merge(dst, src)
}
func (m *HealthResponse) XXX_Size() int {
	return xxx_messageInfo_HealthResponse.Size(m)
}
func (m *HealthResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthResponse.DiscardUnknown(m)
}

var xxx_messageInfo_HealthResponse proto.InternalMessageInfo

func (m *HealthResponse) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func init() {
	proto.RegisterType((*ID)(nil), "protobuf.ID")
	proto.RegisterType((*Message)(nil), "protobuf.Message")
	proto.RegisterType((*HandshakeRequest)(nil), "protobuf.HandshakeRequest")
	proto.RegisterType((*HandshakeResponse)(nil), "protobuf.HandshakeResponse")
	proto.RegisterType((*LookupNodeRequest)(nil), "protobuf.LookupNodeRequest")
	proto.RegisterType((*LookupNodeResponse)(nil), "protobuf.LookupNodeResponse")
	proto.RegisterType((*HealthRequest)(nil), "protobuf.HealthRequest")
	proto.RegisterType((*HealthResponse)(nil), "protobuf.HealthResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NoiseClient is the client API for Noise service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NoiseClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (Noise_StreamClient, error)
	Healthz(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error)
}

type noiseClient struct {
	cc *grpc.ClientConn
}

func NewNoiseClient(cc *grpc.ClientConn) NoiseClient {
	return &noiseClient{cc}
}

func (c *noiseClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Noise_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Noise_serviceDesc.Streams[0], "/protobuf.Noise/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &noiseStreamClient{stream}
	return x, nil
}

type Noise_StreamClient interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ClientStream
}

type noiseStreamClient struct {
	grpc.ClientStream
}

func (x *noiseStreamClient) Send(m *Message) error {
	return x.ClientStream.SendMsg(m)
}

func (x *noiseStreamClient) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *noiseClient) Healthz(ctx context.Context, in *HealthRequest, opts ...grpc.CallOption) (*HealthResponse, error) {
	out := new(HealthResponse)
	err := c.cc.Invoke(ctx, "/protobuf.Noise/Healthz", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NoiseServer is the server API for Noise service.
type NoiseServer interface {
	Stream(Noise_StreamServer) error
	Healthz(context.Context, *HealthRequest) (*HealthResponse, error)
}

func RegisterNoiseServer(s *grpc.Server, srv NoiseServer) {
	s.RegisterService(&_Noise_serviceDesc, srv)
}

func _Noise_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(NoiseServer).Stream(&noiseStreamServer{stream})
}

type Noise_StreamServer interface {
	Send(*Message) error
	Recv() (*Message, error)
	grpc.ServerStream
}

type noiseStreamServer struct {
	grpc.ServerStream
}

func (x *noiseStreamServer) Send(m *Message) error {
	return x.ServerStream.SendMsg(m)
}

func (x *noiseStreamServer) Recv() (*Message, error) {
	m := new(Message)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Noise_Healthz_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NoiseServer).Healthz(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protobuf.Noise/Healthz",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NoiseServer).Healthz(ctx, req.(*HealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Noise_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protobuf.Noise",
	HandlerType: (*NoiseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Healthz",
			Handler:    _Noise_Healthz_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Noise_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "protobuf/stream.proto",
}

func init() { proto.RegisterFile("protobuf/stream.proto", fileDescriptor_stream_e71c00ac036a5599) }

var fileDescriptor_stream_e71c00ac036a5599 = []byte{
	// 409 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0xdd, 0x6e, 0xd3, 0x30,
	0x14, 0xc7, 0xe7, 0x6d, 0x6d, 0xd7, 0xd3, 0xf1, 0x51, 0x33, 0x86, 0xa9, 0x40, 0x44, 0x16, 0x42,
	0xb9, 0xca, 0x50, 0xe1, 0x02, 0x2e, 0x40, 0x62, 0xda, 0xc5, 0x26, 0x60, 0x9a, 0xcc, 0x03, 0x4c,
	0xee, 0x72, 0xc8, 0xa2, 0x66, 0x76, 0xf0, 0x71, 0x2e, 0x82, 0xc4, 0x5b, 0xf1, 0x80, 0xa8, 0xb1,
	0xb3, 0x8e, 0xf5, 0xce, 0xe7, 0x7f, 0x7e, 0x3e, 0xe7, 0x97, 0x0f, 0x78, 0x5a, 0x3b, 0xeb, 0xed,
	0xa2, 0xf9, 0x79, 0x44, 0xde, 0xa1, 0xbe, 0xc9, 0xba, 0x9a, 0xef, 0xf5, 0xf1, 0xec, 0x79, 0x61,
	0x6d, 0x51, 0xe1, 0xd1, 0x2d, 0xa7, 0x4d, 0x1b, 0x20, 0xf9, 0x09, 0xb6, 0xcf, 0x4e, 0xf8, 0x4b,
	0x80, 0xba, 0x59, 0x54, 0xe5, 0xd5, 0xe5, 0x12, 0x5b, 0xc1, 0x12, 0x96, 0xee, 0xab, 0x71, 0x48,
	0xbe, 0x62, 0xcb, 0x05, 0x8c, 0x74, 0x9e, 0x3b, 0x24, 0x12, 0xdb, 0x09, 0x4b, 0xc7, 0xaa, 0x2f,
	0xe5, 0x5f, 0x06, 0xa3, 0xef, 0x48, 0xa4, 0x0b, 0xe4, 0x19, 0x8c, 0x6e, 0xc2, 0xb1, 0x9b, 0x30,
	0x99, 0x1f, 0x64, 0x61, 0x6f, 0xd6, 0xef, 0xcd, 0xbe, 0x98, 0x56, 0xf5, 0x10, 0x7f, 0x0d, 0x43,
	0x42, 0x93, 0xa3, 0xeb, 0x86, 0x4e, 0xe6, 0xfb, 0x6b, 0xee, 0xec, 0x44, 0xc5, 0x1e, 0x7f, 0x01,
	0x63, 0x2a, 0x0b, 0xa3, 0x7d, 0xe3, 0x50, 0xec, 0x04, 0xb3, 0xdb, 0x80, 0x1f, 0xc0, 0xc0, 0x58,
	0x73, 0x85, 0x62, 0x37, 0x61, 0xe9, 0xae, 0x0a, 0x05, 0x7f, 0x05, 0x93, 0x92, 0x2e, 0x1d, 0x52,
	0x6d, 0x0d, 0xa1, 0x18, 0x24, 0x2c, 0xdd, 0x53, 0x50, 0x92, 0x8a, 0x89, 0xe4, 0xf0, 0xf8, 0x54,
	0x9b, 0x9c, 0xae, 0xf5, 0x12, 0x15, 0xfe, 0x6a, 0x90, 0xbc, 0x7c, 0x02, 0xd3, 0x3b, 0x59, 0x04,
	0x3f, 0xc2, 0xf4, 0x9b, 0xb5, 0xcb, 0xa6, 0x3e, 0xb7, 0x79, 0x4f, 0xae, 0xc4, 0xbd, 0x76, 0x05,
	0xfa, 0xf8, 0x9c, 0xf7, 0xc4, 0x43, 0x4f, 0x7e, 0x00, 0x7e, 0xf7, 0x6a, 0x18, 0xc8, 0x25, 0x0c,
	0x6a, 0x44, 0x47, 0x82, 0x25, 0x3b, 0x1b, 0x57, 0x43, 0x4b, 0x3e, 0x82, 0x07, 0xa7, 0xa8, 0x2b,
	0x7f, 0xdd, 0xab, 0xa5, 0xf0, 0xb0, 0x0f, 0xe2, 0x98, 0x43, 0x18, 0x92, 0xd7, 0xbe, 0xa1, 0x4e,
	0x61, 0xac, 0x62, 0x35, 0xff, 0x03, 0x83, 0x73, 0x5b, 0x12, 0xf2, 0xf7, 0x30, 0xfc, 0xd1, 0xfd,
	0x0c, 0x7c, 0xba, 0x5e, 0x11, 0xbf, 0xd4, 0x6c, 0x33, 0x92, 0x5b, 0x29, 0x7b, 0xcb, 0xf8, 0x67,
	0x18, 0x85, 0x45, 0xbf, 0xf9, 0xb3, 0x35, 0xf3, 0x9f, 0xcc, 0x4c, 0x6c, 0x36, 0xe2, 0xcb, 0xda,
	0x3a, 0x7e, 0x03, 0x87, 0xd6, 0x15, 0x59, 0x8d, 0xae, 0x2a, 0x4d, 0x66, 0x56, 0x26, 0x81, 0x3e,
	0x86, 0x4e, 0xeb, 0x62, 0x75, 0xbe, 0x60, 0x8b, 0x61, 0x17, 0xbe, 0xfb, 0x17, 0x00, 0x00, 0xff,
	0xff, 0x3b, 0x8f, 0x40, 0x14, 0xba, 0x02, 0x00, 0x00,
}
