// This file was automatically generated by genny.
// Any changes will be lost if this file is regenerated.
// see https://github.com/cheekybits/genny

package network

import "sync"

type Uint64MessageChannelSyncMap struct {
	inner sync.Map
}

func (m *Uint64MessageChannelSyncMap) Store(k uint64, v MessageChannel) {
	m.inner.Store(k, v)
}

func (m *Uint64MessageChannelSyncMap) Load(k uint64) (MessageChannel, bool) {
	val, ok := m.inner.Load(k)
	if !ok {
		return nil, false
	}

	return val.(MessageChannel), true
}

func (m *Uint64MessageChannelSyncMap) Range(cb func(uint64, MessageChannel) bool) {
	m.inner.Range(func(k interface{}, v interface{}) bool {
		return cb(k.(uint64), v.(MessageChannel))
	})
}

func (m *Uint64MessageChannelSyncMap) Delete(key uint64) {
	m.inner.Delete(key)
}
